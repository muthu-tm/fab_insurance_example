version: "3.4"
volumes:
  peer0.customer.example.com:
networks: 
  fabric: 
    external: 
      name: fabric
services:
  peer0_customer:
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      placement:
        constraints:
          - node.hostname == linuxkit-025000000001
    image: hyperledger/fabric-peer
    networks:
      fabric:
        aliases:
        - peer0.customer.example.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.customer.example.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8052
      - CORE_PEER_LOCALMSPID=CustomerMSP
      - CORE_PEER_ADDRESS=peer0.customer.example.com:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.customer.example.com:8051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
    - /var/run/:/host/var/run/
    - ./crypto-config/peerOrganizations/customer.example.com/peers/peer0.customer.example.com/msp:/etc/hyperledger/fabric/msp
    - ./crypto-config/peerOrganizations/customer.example.com/peers/peer0.customer.example.com/tls:/etc/hyperledger/fabric/tls
    - ./fab_insurance_exmaple/chaincode/:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go
    - peer0.customer.example.com:/var/hyperledger/production
    ports:
            - published: 8051
              target: 8051
              mode: host
            - published: 8053
              target: 8053
              mode: host